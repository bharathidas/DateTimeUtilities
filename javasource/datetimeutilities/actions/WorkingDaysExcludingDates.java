// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package datetimeutilities.actions;

import java.util.Calendar;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Get working days (excluding Saturday and Sunday) using start date and end date (Start and End date will not be included in the working days)
 */
public class WorkingDaysExcludingDates extends CustomJavaAction<java.lang.Long>
{
	private java.util.Date StartDate;
	private java.util.Date EndDate;

	public WorkingDaysExcludingDates(IContext context, java.util.Date StartDate, java.util.Date EndDate)
	{
		super(context);
		this.StartDate = StartDate;
		this.EndDate = EndDate;
	}

	@java.lang.Override
	public java.lang.Long executeAction() throws Exception
	{
		// BEGIN USER CODE
		
		Calendar startCal;
		Calendar endCal;
		startCal = Calendar.getInstance();
		startCal.setTime(StartDate);
		endCal = Calendar.getInstance();
		endCal.setTime(EndDate);
		long workDays = 0;

		// Return 0 if start and end are the same
		if (startCal.getTimeInMillis() == endCal.getTimeInMillis()) {
			return workDays;
		}

		if (startCal.getTimeInMillis() > endCal.getTimeInMillis()) {
			startCal.setTime(EndDate);
			endCal.setTime(StartDate);
		}

		do {
			startCal.add(Calendar.DAY_OF_MONTH, 1);
			if (startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY
					&& startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
				++workDays;
			}
		} while (startCal.getTimeInMillis() < endCal.getTimeInMillis());

		if (endCal.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY
				&& endCal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
			if (workDays != 0) {
				workDays = workDays - 1;
			}
		}

		return workDays;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "WorkingDaysExcludingDates";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
